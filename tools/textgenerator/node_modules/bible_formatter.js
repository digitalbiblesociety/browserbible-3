var fs = require('fs'),
	breakChar = '\n';


var bibleFormatter = {
	
	breakChar: breakChar,

	formatChapterCode: function(dbsCode, chapterNum) {
		return dbsCode + chapterNum.toString();
	},
	
	formatVerseCode: function(dbsCode, chapterNum, verseNum) {
		return dbsCode + chapterNum.toString() + '_' + verseNum.toString();
	},
	
	openDocument: function(title, dir, className) {
		return '<!DOCTYPE html>' + breakChar +
				'<html>' + breakChar + 
				'<head>' + breakChar + 
					'<meta charset="utf-8" />' + breakChar + 
					'<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no" />' + breakChar + 
					'<title>' + title + '</title>' + breakChar + 	
					'<link href="../../../build/mobile.css" rel="stylesheet" />' + breakChar + 
					'<script src="../../../build/mobile.js"></script>' + breakChar + 						
				'</head>' + breakChar +
				'<body dir="' + dir + '" class="' + className + '">' + breakChar;
	},
	
	closeDocument: function(info, chapterData) {
		return 	'</body>' + breakChar + 
				'</html>';
	},	


	openVersionIndex: function(info) {
	
		return this.openDocument(info.name + ' (' + info.abbr + ')', info.dir, 'text-index') +				
				'<header><nav>' + breakChar +
					'<span class="name">' + info.name + '</span>' +
					'<a class="home" href="../index.html">&#9776;</a>' +					
				'</nav></header>' + breakChar + 
				'<ul class="division-list">' + breakChar;
				
	},
	
	closeVersionIndex: function(info, chapterData) {
		return 	'</ul>' + breakChar + 			 
				this.closeDocument();
	},	
	
	openBookIndex: function(info, bookName) {
	
		return this.openDocument(bookName + ' (' + info.abbr + ')', info.dir, 'division-index') +				
				'<header><nav>' + breakChar +
					'<span class="name">' + bookName + '</span>' + breakChar +				
					'<a class="home" href="index.html">&#9776;</a>' + breakChar +
				'</nav></header>' + breakChar + 
				'<ul class="section-list">' + breakChar;
				
	},
	
	closeBookIndex: function(info, chapterData) {
		return 	'</ul>' + breakChar + 			 
				this.closeDocument();
	},		

	rightArrow: '&#9658;',
	leftArrow: '&#9668;',

	openChapterDocument: function(info, chapterData) {
	
		var sectionid = chapterData.id,
			sectionDbsCode = sectionid.substr(0,2),
			sectionChapterNumber = sectionid.substr(2);	
			chapterTitle = info.divisionNames[ info.divisions.indexOf(sectionDbsCode) ] + ' ' + sectionChapterNumber;
	
		return  this.openDocument(chapterData.title + ' (' + info.abbr + ')', info.dir, 'section-document') +
				'<header><nav>' + breakChar +
					'<a class="name" href="' + sectionDbsCode + '.html">' + info.name + '</a>' +
					'<a class="location" href="' + sectionDbsCode + '.html">' + chapterTitle + '</a>' +					
					(chapterData.previd != null ? '<a class="prev" href="' + chapterData.previd + '.html">' + (info.dir == 'ltr' ? this.leftArrow : this.rightArrow) + '</a>' + breakChar : '') +
					'<a class="home" href="index.html">&#9776;</a>' + breakChar +
					(chapterData.nextid != null ? '<a class="next" href="' + chapterData.nextid + '.html">' + (info.dir == 'ltr' ? this.rightArrow : this.leftArrow) + '</a>' + breakChar : '') +
				'</nav></header>' + breakChar;
	},
	
	closeChapterDocument: function(info, chapterData) {
		return breakChar +
				'<footer><nav>' + breakChar +
					(chapterData.previd != null ? '<a class="prev" href="' + chapterData.previd + '.html">' + (info.dir == 'ltr' ? this.leftArrow : this.rightArrow) + '</a>' : '') + breakChar +
					'<a class="home" href="index.html">&#9776;</a>' + breakChar +
					(chapterData.previd != null ? '<a class="next" href="' + chapterData.nextid + '.html">' + (info.dir == 'ltr' ? this.rightArrow : this.leftArrow) + '</a>' : '') + breakChar +
				'</nav></footer>' + breakChar + 
				this.closeDocument();
	},	

	openChapter: function(info, chapterData) {

		//<div class="section chapter 

		return '<div class="section chapter ' + chapterData.id + ' ' + info.id + ' ' + info.lang + '"' + 
					(info.dir ? ' dir="' + info.dir + '"' : '') + 
					(info.lang ? ' lang="' + info.lang + '"' : '') + 					
					' data-id="' + chapterData.id + '"' + 
					' data-nextid="' + chapterData.nextid + '"' + 
					' data-previd="' + chapterData.previd + '"' + 
					'>' + breakChar;
	},
	
	closeChapter: function() {
		return breakChar + '</div>';
	},	

	
	openVerse: function(dbsVerseCode, verseNumber) {
		return 	(typeof verseNumber != 'undefined' && verseNumber != null ? '<span class="v-num v-' + verseNumber + '">' + verseNumber + '&nbsp;</span>' : '') + 
				'<span class="v ' + dbsVerseCode + '" data-id="' + dbsVerseCode + '">'; 
	},
	
	closeVerse: function() {
		return '</span>' + breakChar;
	}	
	
}


module.exports = bibleFormatter;